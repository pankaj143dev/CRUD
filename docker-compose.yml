# version: '3.8'

# services:
#   backend:
#     build:
#       context: ./server
#       dockerfile: Dockerfile
#     restart: unless-stopped
#     environment:
#       MYSQL_HOST: db
#       MYSQL_USER: root
#       MYSQL_PASSWORD: example
#       MYSQL_DATABASE: crud_db
#     depends_on:
#       - db

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     restart: unless-stopped
#     depends_on:
#       - backend

#   db:
#     image: mysql:5.7
#     environment:
#       MYSQL_ROOT_PASSWORD: example
#       MYSQL_DATABASE: crud_db
#     volumes:
#       - db-data:/var/lib/mysql

#   nginx:
#     image: nginx:alpine
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
#     depends_on:
#       - frontend
#       - backend

# volumes:
#   db-data:

version: "3.9"
services:
  db:
    image: mysql:8.0
    restart: always
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    restart: always
    env_file: .env
    depends_on:
      - db
    environment:
      DB_HOST: db
    expose:
      - "5000"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    restart: always
    expose:
      - "80"

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
      - server

volumes:
  db_data:
